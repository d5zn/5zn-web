class TrinkyApp{constructor(){this.stravaToken=localStorage.getItem('strava_token');this.currentWorkout=null;this.workouts=[];this.canvas=null;this.ctx=null;this.currentTab='photo';this.currentMetric='distance';this.activeMetrics=new Set(['distance']);this.backgroundImage=null;this.originalBackgroundImage=null;this.isMonochrome=false;this.logoImage=null;this.imageTransform={x:0,y:0,scale:1,rotation:0};this.touchState={isDragging:false,isScaling:false,lastTouchDistance:0,lastTouchAngle:0};this.init()}init(){this.setupCanvas();this.setupEventListeners();this.setupPhotoButtons();this.initializeActiveMetrics();console.log('üöÄ TrinkyApp initialized')}setupCanvas(){this.canvas=document.getElementById('route-canvas');if(!this.canvas){console.error('‚ùå Canvas not found');return}this.ctx=this.canvas.getContext('2d');this.resizeCanvas();this.setupImageManipulation();window.addEventListener('resize',()=>this.resizeCanvas())}setupEventListeners(){document.getElementById('connect-strava-btn')?.addEventListener('click',()=>this.connectStrava());document.getElementById('demo-btn')?.addEventListener('click',()=>this.loadDemoData());document.querySelectorAll('.tab-btn').forEach(btn=>{btn.addEventListener('click',(e)=>this.switchTab(e.target.dataset.tab))});document.querySelectorAll('.data-btn').forEach(btn=>{btn.addEventListener('click',(e)=>this.selectMetric(e.target.dataset.metric))});document.getElementById('upload-photo-btn')?.addEventListener('click',()=>document.getElementById('photo-input').click());document.getElementById('photo-input')?.addEventListener('change',(e)=>this.handlePhotoUpload(e.target.files[0]));document.querySelectorAll('.ratio-btn').forEach(btn=>{btn.addEventListener('click',(e)=>this.changeRatio(e.target.dataset.ratio))})}setupImageManipulation(){if(!this.canvas)return;this.canvas.addEventListener('mousedown',(e)=>this.handleMouseDown(e));this.canvas.addEventListener('mousemove',(e)=>this.handleMouseMove(e));this.canvas.addEventListener('mouseup',()=>this.handleMouseUp());this.canvas.addEventListener('wheel',(e)=>this.handleWheel(e));this.canvas.addEventListener('touchstart',(e)=>this.handleTouchStart(e));this.canvas.addEventListener('touchmove',(e)=>this.handleTouchMove(e));this.canvas.addEventListener('touchend',()=>this.handleTouchEnd())}handleMouseDown(e){this.touchState.isDragging=true;this.touchState.lastX=e.clientX;this.touchState.lastY=e.clientY;e.preventDefault()}handleMouseMove(e){if(!this.touchState.isDragging)return;const deltaX=e.clientX-this.touchState.lastX;const deltaY=e.clientY-this.touchState.lastY;this.imageTransform.x+=deltaX;this.imageTransform.y+=deltaY;this.touchState.lastX=e.clientX;this.touchState.lastY=e.clientY;this.drawRoute();e.preventDefault()}handleMouseUp(){this.touchState.isDragging=false}handleWheel(e){const scaleFactor=e.deltaY>0?0.9:1.1;this.imageTransform.scale*=scaleFactor;this.imageTransform.scale=Math.max(0.1,Math.min(5,this.imageTransform.scale));this.drawRoute();e.preventDefault()}handleTouchStart(e){if(e.touches.length===1){this.touchState.isDragging=true;this.touchState.lastX=e.touches[0].clientX;this.touchState.lastY=e.touches[0].clientY}else if(e.touches.length===2){this.touchState.isScaling=true;const touch1=e.touches[0];const touch2=e.touches[1];this.touchState.lastTouchDistance=Math.sqrt(Math.pow(touch2.clientX-touch1.clientX,2)+Math.pow(touch2.clientY-touch1.clientY,2));this.touchState.lastTouchAngle=Math.atan2(touch2.clientY-touch1.clientY,touch2.clientX-touch1.clientX)}e.preventDefault()}handleTouchMove(e){if(this.touchState.isDragging&&e.touches.length===1){const deltaX=e.touches[0].clientX-this.touchState.lastX;const deltaY=e.touches[0].clientY-this.touchState.lastY;this.imageTransform.x+=deltaX;this.imageTransform.y+=deltaY;this.touchState.lastX=e.touches[0].clientX;this.touchState.lastY=e.touches[0].clientY;this.drawRoute()}else if(this.touchState.isScaling&&e.touches.length===2){const touch1=e.touches[0];const touch2=e.touches[1];const distance=Math.sqrt(Math.pow(touch2.clientX-touch1.clientX,2)+Math.pow(touch2.clientY-touch1.clientY,2));const angle=Math.atan2(touch2.clientY-touch1.clientY,touch2.clientX-touch1.clientX);const scaleChange=distance/this.touchState.lastTouchDistance;this.imageTransform.scale*=scaleChange;this.imageTransform.scale=Math.max(0.1,Math.min(5,this.imageTransform.scale));const angleChange=angle-this.touchState.lastTouchAngle;this.imageTransform.rotation+=angleChange;this.touchState.lastTouchDistance=distance;this.touchState.lastTouchAngle=angle;this.drawRoute()}e.preventDefault()}handleTouchEnd(){this.touchState.isDragging=false;this.touchState.isScaling=false}getTouchCenter(touches){let x=0,y=0;for(let touch of touches){x+=touch.clientX;y+=touch.clientY}return{x:x/touches.length,y:y/touches.length}}setupPhotoButtons(){document.getElementById('mono-toggle-btn')?.addEventListener('click',()=>{if(this.isMonochrome){this.returnToOriginal()}else{this.convertToMono()}})}convertToMono(){if(!this.backgroundImage){console.log('‚ö†Ô∏è No background image to convert');return}const tempCanvas=document.createElement('canvas');const tempCtx=tempCanvas.getContext('2d');const img=new Image();img.onload=()=>{tempCanvas.width=img.width;tempCanvas.height=img.height;tempCtx.drawImage(img,0,0);const imageData=tempCtx.getImageData(0,0,tempCanvas.width,tempCanvas.height);const data=imageData.data;for(let i=0;i<data.length;i+=4){const r=data[i];const g=data[i+1];const b=data[i+2];let gray=Math.round(0.299*r+0.587*g+0.114*b);gray=gray/255;if(gray<0.5){gray=Math.pow(gray*2,1.5)/2}else{gray=0.5+Math.pow((gray-0.5)*2,0.6)/2}gray=Math.pow(gray,0.8);gray=gray*gray*(3-2*gray);gray=Math.round(gray*255);gray=Math.max(0,Math.min(255,gray));data[i]=gray;data[i+1]=gray;data[i+2]=gray}tempCtx.putImageData(imageData,0,0);this.backgroundImage=tempCanvas.toDataURL('image/png');this.isMonochrome=true;this.updateMonoButton();this.drawRoute();console.log('üñ§ Image converted to monochrome')};img.src=this.backgroundImage}returnToOriginal(){if(!this.originalBackgroundImage){console.log('‚ö†Ô∏è No original image to return to');return}this.backgroundImage=this.originalBackgroundImage;this.isMonochrome=false;this.updateMonoButton();this.drawRoute();console.log('üîÑ Returned to original image')}updateMonoButton(){const monoBtn=document.getElementById('mono-toggle-btn');if(!monoBtn)return;if(this.isMonochrome){monoBtn.textContent='Return to Original'}else{monoBtn.textContent='Convert to Mono'}}connectStrava(){const clientId='your_strava_client_id';const redirectUri=encodeURIComponent(window.location.origin+'/oauth/index.html');const scope='read,activity:read';const authUrl=`https://www.strava.com/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code&scope=${scope}`;window.location.href=authUrl}loadDemoData(){console.log('üéÆ Loading demo data...');this.showLoading(true);setTimeout(()=>{this.currentWorkout={id:1,name:'Morning Ride',distance:15000,total_elevation_gain:450,moving_time:3600,average_speed:15.2,start_date:'2024-01-15T08:30:00Z'};this.showLoading(false);this.showConnectedState();this.drawRoute();console.log('‚úÖ Demo data loaded')},1000)}showLoading(show){const loading=document.getElementById('loading');if(loading){loading.classList.toggle('hidden',!show)}}showConnectedState(){document.getElementById('not-connected').classList.add('hidden');document.getElementById('connected').classList.remove('hidden');this.updateWorkoutDisplay()}updateWorkoutDisplay(){if(!this.currentWorkout)return;if(this.activeMetrics.has('distance')){const distance=this.formatDistance(this.currentWorkout.distance);document.getElementById('distance-value').textContent=distance}else{document.getElementById('distance-value').textContent=''}if(this.activeMetrics.has('elevation')){const elevation=this.formatElevation(this.currentWorkout.total_elevation_gain);document.getElementById('elevation-value').textContent=elevation}else{document.getElementById('elevation-value').textContent=''}if(this.activeMetrics.has('speed')){const speed=this.formatSpeed(this.currentWorkout.average_speed);document.getElementById('speed-value').textContent=speed}else{document.getElementById('speed-value').textContent=''}if(this.activeMetrics.has('time')){const time=this.formatTime(this.currentWorkout.moving_time);document.getElementById('time-value').textContent=time}else{document.getElementById('time-value').textContent=''}this.drawRoute()}formatDistance(meters){if(meters>=1000){return`${(meters/1000).toFixed(1)} km`}return`${meters} m`}formatElevation(meters){return`${meters} m`}formatSpeed(mps){const kmh=mps*3.6;return`${kmh.toFixed(1)} km/h`}formatTime(seconds){const hours=Math.floor(seconds/3600);const minutes=Math.floor((seconds%3600)/60);if(hours>0){return`${hours}h ${minutes}m`}return`${minutes}m`}switchTab(tabName){this.currentTab=tabName;document.querySelectorAll('.tab-btn').forEach(btn=>btn.classList.remove('active'));document.querySelectorAll('.tab-panel').forEach(panel=>panel.classList.remove('active'));document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');document.getElementById(`${tabName}-tab`).classList.add('active');console.log(`üì± Switched to ${tabName} tab`)}selectMetric(metric){const button=document.querySelector(`[data-metric="${metric}"]`);if(this.activeMetrics.has(metric)){this.activeMetrics.delete(metric);button.classList.remove('active');if(this.activeMetrics.size===0){this.activeMetrics.add('distance');document.querySelector(`[data-metric="distance"]`).classList.add('active')}}else{this.activeMetrics.add(metric);button.classList.add('active')}this.updateWorkoutDisplay();this.drawRoute()}initializeActiveMetrics(){document.querySelectorAll('.data-btn').forEach(btn=>{btn.classList.remove('active')});document.querySelector(`[data-metric="distance"]`).classList.add('active')}changeRatio(ratio){console.log(`üìê Changing ratio to ${ratio}`);const connectedState=document.getElementById('connected');const previewArea=document.querySelector('.preview-area');if(ratio==='4:5'){connectedState.classList.add('ratio-4-5');connectedState.classList.remove('ratio-9-16');previewArea.classList.add('ratio-4-5');previewArea.classList.remove('ratio-9-16')}else{connectedState.classList.add('ratio-9-16');connectedState.classList.remove('ratio-4-5');previewArea.classList.add('ratio-9-16');previewArea.classList.remove('ratio-4-5')}this.resizeCanvas();if(this.currentWorkout){this.drawRoute()}}resizeCanvas(){if(!this.canvas)return;const connectedState=document.getElementById('connected');const is4_5=connectedState&&connectedState.classList.contains('ratio-4-5');const dpr=window.devicePixelRatio||1;let canvasWidth,canvasHeight;if(is4_5){const screenWidth=window.innerWidth;canvasWidth=screenWidth;canvasHeight=screenWidth*5/4;console.log('üìê 4:5 Canvas - calculated from screen width:',canvasWidth,'x',canvasHeight)}else{const previewArea=document.querySelector('.preview-area');const previewRect=previewArea.getBoundingClientRect();canvasWidth=previewRect.width;canvasHeight=previewRect.height;console.log('üìê 9:16 Canvas - using preview area:',canvasWidth,'x',canvasHeight)}this.canvas.style.width=canvasWidth+'px';this.canvas.style.height=canvasHeight+'px';this.canvas.width=canvasWidth*dpr;this.canvas.height=canvasHeight*dpr;this.ctx.scale(dpr,dpr);console.log('üìê Canvas resized:',canvasWidth,'x',canvasHeight,'DPR:',dpr,'Actual canvas size:',this.canvas.width,'x',this.canvas.height);if(this.currentWorkout){this.drawRoute()}}handlePhotoUpload(file){if(!file)return;const reader=new FileReader();reader.onload=(e)=>{this.backgroundImage=e.target.result;this.originalBackgroundImage=e.target.result;this.isMonochrome=false;this.updateMonoButton();this.updateBackground();const monoBtn=document.getElementById('mono-toggle-btn');if(monoBtn){monoBtn.style.display='flex';monoBtn.style.alignItems='center';monoBtn.style.justifyContent='center'}};reader.readAsDataURL(file)}updateBackground(){if(this.backgroundImage){this.drawRoute()}}drawRoute(){if(!this.canvas||!this.ctx)return;this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);this.drawBackgroundSync();this.drawDemoRoute();this.drawStravaData()}drawBackgroundSync(){if(this.backgroundImage){const img=new Image();img.src=this.backgroundImage;if(img.complete){this.drawBackgroundImage(img)}else{img.onload=()=>{this.drawBackgroundImage(img);this.drawDemoRoute();this.drawStravaData()}}}}drawBackgroundImage(img){const canvasWidth=this.canvas.width/(window.devicePixelRatio||1);const canvasHeight=this.canvas.height/(window.devicePixelRatio||1);this.ctx.save();this.ctx.translate(this.imageTransform.x,this.imageTransform.y);this.ctx.scale(this.imageTransform.scale,this.imageTransform.scale);this.ctx.rotate(this.imageTransform.rotation);const imgAspect=img.width/img.height;const canvasAspect=canvasWidth/canvasHeight;let drawWidth,drawHeight;if(imgAspect>canvasAspect){drawHeight=canvasHeight;drawWidth=drawHeight*imgAspect}else{drawWidth=canvasWidth;drawHeight=drawWidth/imgAspect}const x=(canvasWidth-drawWidth)/2;const y=(canvasHeight-drawHeight)/2;this.ctx.drawImage(img,x,y,drawWidth,drawHeight);this.drawOrangeOverlay();this.ctx.restore()}drawOrangeOverlay(){const canvasWidth=this.canvas.width/(window.devicePixelRatio||1);const canvasHeight=this.canvas.height/(window.devicePixelRatio||1);this.ctx.fillStyle='rgba(0,0,0,0.4)';this.ctx.fillRect(0,0,canvasWidth,canvasHeight);console.log('üñ§ Black overlay drawn')}drawDemoRoute(){const width=this.canvas.width/(window.devicePixelRatio||1);const height=this.canvas.height/(window.devicePixelRatio||1);const connectedState=document.getElementById('connected');const is4_5=connectedState&&connectedState.classList.contains('ratio-4-5');if(!is4_5){const topPadding=height*0.07;const bottomPadding=height*0.04;const routeTopPadding=topPadding+120;const availableHeight=height-topPadding-bottomPadding;const routeBottomPadding=availableHeight*0.3;const routeHeight=height-routeTopPadding-routeBottomPadding;const points=this.generateDemoRoute(width,routeHeight,20,routeTopPadding);this.drawSingleRoute(points)}else{const topPadding=height*0.08;const bottomPadding=height*0.08;const leftPadding=width*0.08;const rightPadding=width*0.08;const routeWidth=width-leftPadding-rightPadding;const routeHeight=height-topPadding-bottomPadding;const routeTopPadding=topPadding;const points=this.generateDemoRoute(routeWidth,routeHeight,20,routeTopPadding);this.drawSingleRoute(points)}}generateDemoRoute(width,height,pointCount,offsetY){const points=[];for(let i=0;i<pointCount;i++){const x=(i/(pointCount-1))*width;const y=offsetY+Math.sin(i*0.3)*height*0.3+height*0.5;points.push({x,y})}return points}drawSingleRoute(points){if(points.length<2)return;const minX=Math.min(...points.map(p=>p.x));const maxX=Math.max(...points.map(p=>p.x));const gradient=this.ctx.createLinearGradient(minX,0,maxX,0);gradient.addColorStop(0,'#002395');gradient.addColorStop(0.4,'#ffffff');gradient.addColorStop(0.6,'#ffffff');gradient.addColorStop(1,'#ED2939');this.ctx.strokeStyle=gradient;this.ctx.lineWidth=3;this.ctx.lineCap='round';this.ctx.lineJoin='round';this.ctx.beginPath();this.ctx.moveTo(points[0].x,points[0].y);for(let i=1;i<points.length;i++){this.ctx.lineTo(points[i].x,points[i].y)}this.ctx.stroke();console.log('üõ£Ô∏è Route drawn with French flag gradient')}drawStravaData(){if(!this.currentWorkout)return;this.drawStravaDataCard()}drawStravaDataCard(){const canvasWidth=this.canvas.width/(window.devicePixelRatio||1);const canvasHeight=this.canvas.height/(window.devicePixelRatio||1);const connectedState=document.getElementById('connected');const is4_5=connectedState&&connectedState.classList.contains('ratio-4-5');let topPadding,bottomPadding;if(is4_5){topPadding=canvasHeight*0.08;bottomPadding=canvasHeight*0.08}else{topPadding=canvasHeight*0.07;bottomPadding=canvasHeight*0.04}this.ctx.fillStyle='#FFFFFF';this.ctx.font='600 22px Inter, sans-serif';this.ctx.textAlign='left';this.ctx.fillText('Morning Ride',20,topPadding+50);this.ctx.font='13px Inter, sans-serif';this.ctx.fillStyle='#FFFFFF';this.ctx.fillText('25 OCT, 15:30',20,topPadding+80);if(is4_5){const logoX=(canvasWidth-72)/2;const logoY=canvasHeight-bottomPadding-72-20;this.drawLogoContainer(logoX,logoY,72,72)}else{const logoX=canvasWidth-72-20;const logoY=topPadding+50-36;this.drawLogoContainer(logoX,logoY,72,72)}const availableHeight=canvasHeight-topPadding-bottomPadding;const statsHeight=availableHeight*0.3;const statsY=canvasHeight-statsHeight+20;const statsWidth=canvasWidth-40;const colWidth=statsWidth/3;const rowHeight=statsHeight/2;const allStats=[{key:'distance',label:'DISTANCE',value:this.formatDistance(this.currentWorkout.distance)},{key:'elevation',label:'ELEVATION',value:this.formatElevation(this.currentWorkout.total_elevation_gain)},{key:'time',label:'TIME',value:this.formatTime(this.currentWorkout.moving_time)},{key:'speed',label:'SPEED/AVG',value:this.formatSpeed(this.currentWorkout.average_speed)},{key:'calories',label:'CALORIES',value:'1,200'},{key:'power',label:'POWER/AVG',value:'180W'}];const stats=allStats.filter(stat=>this.activeMetrics.has(stat.key));if(is4_5){this.drawMetrics4_5(stats,canvasWidth,canvasHeight,topPadding,bottomPadding)}else{for(let i=0;i<stats.length;i++){const col=i%3;const row=Math.floor(i/3);const y=statsY+row*56;let x,textAlign;if(col===0){x=20;textAlign='left'}else if(col===1){x=20+colWidth+colWidth/2;textAlign='center'}else{x=canvasWidth-20;textAlign='right'}this.ctx.fillStyle='#FFFFFF';this.ctx.font='13px Inter, sans-serif';this.ctx.textAlign=textAlign;this.ctx.fillText(stats[i].label,x,y+20);this.ctx.fillStyle='#FFFFFF';this.ctx.font='600 22px Inter, sans-serif';this.ctx.fillText(stats[i].value,x,y+50)}}console.log('üìä Strava data card drawn to canvas')}drawMetrics4_5(stats,canvasWidth,canvasHeight,topPadding,bottomPadding){const leftPadding=canvasWidth*0.08;const rightPadding=canvasWidth*0.08;const centerY=canvasHeight/2;const positions=[{x:leftPadding+20,y:topPadding+60,textAlign:'left'},{x:canvasWidth-rightPadding-20,y:topPadding+60,textAlign:'right'},{x:leftPadding+20,y:centerY,textAlign:'left'},{x:canvasWidth-rightPadding-20,y:centerY,textAlign:'right'},{x:leftPadding+20,y:canvasHeight-bottomPadding-40,textAlign:'left'},{x:canvasWidth-rightPadding-20,y:canvasHeight-bottomPadding-40,textAlign:'right'}];for(let i=0;i<stats.length&&i<positions.length;i++){const pos=positions[i];this.ctx.fillStyle='#FFFFFF';this.ctx.font='13px Inter, sans-serif';this.ctx.textAlign=pos.textAlign;this.ctx.fillText(stats[i].label,pos.x,pos.y);this.ctx.fillStyle='#FFFFFF';this.ctx.font='600 22px Inter, sans-serif';this.ctx.fillText(stats[i].value,pos.x,pos.y+30)}console.log('üìä Metrics positioned for 4:5 ratio - showing',stats.length,'active metrics')}drawLogoContainer(x,y,width,height){this.ctx.fillStyle='transparent';this.ctx.fillRect(x,y,width,height);if(this.logoImage){this.drawSVGLogo(x,y,width,height)}else{this.loadLogo()}}loadLogo(){const img=new Image();img.onload=()=>{this.logoImage=img;this.drawRoute()};img.src='logo_NIP.svg'}drawSVGLogo(x,y,width,height){if(!this.logoImage)return;this.ctx.drawImage(this.logoImage,x,y,width,height);console.log('üé® SVG logo drawn at',x,y,'size',width,'x',height)}}
document.addEventListener('DOMContentLoaded',()=>{new TrinkyApp()});
